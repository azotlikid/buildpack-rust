#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit
set -o pipefail

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd "$(dirname ${0:-})"; cd ..; pwd)

echo "BUILD_DIR:$BUILD_DIR"
echo "CACHE_DIR:$CACHE_DIR"
echo "ENV_DIR:$ENV_DIR"
echo "BP_DIR:$BP_DIR"

VERSION=nightly

RUSTUP_HOME=$CACHE_DIR/rustup-$VERSION
CARGO_HOME=$CACHE_DIR/cargo

export PATH="$RUSTUP_HOME":"$CARGO_HOME":$PATH

if [ -d "$RUSTUP_HOME" ]; then
    echo "-----> Checking for new releases of Rust $VERSION channel"
    # It's possible that $VERSION has changed, or the `stable` channel has updated.
    rustup self update
    rustup update "$VERSION"
    rustup default "$VERSION"
else
    mkdir -p $RUSTUP_HOME
    cd $RUSTUP_HOME
    echo "-----> Downloading rustup"
    curl https://sh.rustup.rs -sSf > rustup.sh
    chmod u+x rustup.sh
    echo "-----> Using rustup to install Rust channel $VERSION"
    ./rustup.sh -y --default-toolchain "$VERSION"
    source $CARGO_HOME/env
    rm rustup.sh
fi
if [ ! -x "$CARGO_HOME/bin/rustc" ]; then
    echo "failed: Cannot find Rust binaries at $CARGO_HOME"
    exit 1
fi

export CARGO_TARGET_DIR="$CACHE_DIR/target"

echo "-----> Building application using Cargo"
cd "$BUILD_DIR/$BUILD_PATH"
rm -rf target/
cargo build --release
mkdir -p target/release
find "$CARGO_TARGET_DIR/release" -maxdepth 1 -type f -executable -exec cp -a -t target/release {} \;

